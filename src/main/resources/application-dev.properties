#开发环境配置
#==========================================

#多数据源配置  主
spring.datasource.frame.driverClassName=com.mysql.cj.jdbc.Driver
spring.datasource.frame.url=jdbc:mysql://localhost:3306/cloud?serverTimezone=GMT%2B8&useUnicode=true&characterEncoding=utf-8
spring.datasource.frame.username=root
spring.datasource.frame.password=root
# 数据连接池其他配置  数据库连接池最大连接数=服务器核心数*2+1
spring.datasource.frame.initialSize=5
spring.datasource.frame.minIdle=5
spring.datasource.frame.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.frame.maxWait=60000
#配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.frame.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.frame.minEvictableIdleTimeMillis=300000


#===============mysql 从
spring.datasource.mysql.driverClassName=com.mysql.cj.jdbc.Driver
spring.datasource.mysql.url=jdbc:mysql://localhost:3306/cloud?serverTimezone=GMT%2B8&useUnicode=true&characterEncoding=utf-8
spring.datasource.mysql.username=root
spring.datasource.mysql.password=root
# 数据连接池其他配置  数据库连接池最大连接数=服务器核心数*2+1
spring.datasource.mysql.initialSize=5
spring.datasource.mysql.minIdle=5
spring.datasource.mysql.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.mysql.maxWait=60000
#配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.mysql.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.mysql.minEvictableIdleTimeMillis=300000

#===============sqlServer  从
spring.datasource.sqlserver.driverClassName=com.microsoft.sqlserver.jdbc.SQLServerDriver
spring.datasource.sqlserver.url=jdbc:sqlserver://localhost:1433;DatabaseName=EnvBAR_DB
spring.datasource.sqlserver.username=dev
spring.datasource.sqlserver.password=1qaz2wsx
# 数据连接池其他配置  数据库连接池最大连接数=服务器核心数*2+1
spring.datasource.sqlserver.initialSize=5
spring.datasource.sqlserver.minIdle=5
spring.datasource.sqlserver.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.sqlserver.maxWait=60000
#配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.sqlserver.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.sqlserver.minEvictableIdleTimeMillis=300000

#=============oracle   从
spring.datasource.oracle.driverClassName=oracle.jdbc.OracleDriver
spring.datasource.oracle.url=jdbc:oracle:thin:@localhost:1521:ORCL
spring.datasource.oracle.username=REPORTSXYD
spring.datasource.oracle.password=REPORTSXYD
# 数据连接池其他配置 数据库连接池最大连接数=服务器核心数*2+1
spring.datasource.oracle.initialSize=5
spring.datasource.oracle.minIdle=5
spring.datasource.oracle.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.oracle.maxWait=60000
#配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.oracle.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.oracle.minEvictableIdleTimeMillis=300000

#=============redis连接
spring.redis.host=127.0.0.1
# Redis数据库索引（默认为0）
spring.redis.database=1
#redis的默认端口
spring.redis.port=6379
#redis密码
spring.redis.password=1qaz2wsx
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.jedis.pool.max-active=20
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.jedis.pool.max-wait=-1ms
# 连接池中的最大空闲连接
spring.redis.jedis.pool.max-idle=20
# 连接池中的最小空闲连接
spring.redis.jedis.pool.min-idle=1
# 连接超时时间（毫秒）
spring.redis.timeout=5000ms
